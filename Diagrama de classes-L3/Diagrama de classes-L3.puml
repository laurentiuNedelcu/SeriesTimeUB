@startuml
title __Diagrama de classes de la app SeriesTimeUB__\n

package "controller" {
    class Controlador{
    -dades: STUB
    -dao: DAO_XML_STUB
    -facade: ControladorAcces
    {static} controlador: Controlador
    +{static} getInstance()
    +getCataleg()
    +registreUsuari(int id, String nom_real, int dni, String nacionalitat, String nickname,
     String password, String data_naixement, String adress, boolean vip)
    +logInUsuari(String nickname, String password)
    +visualitzarEpisodi(int ep, int temp, String ser)
    +subscriureEpisodi(int ep, int temp, String ser)
    +valorarEpisodi(int puntuacio, String data, int ep, int temp, String ser)
    +isSubscrit(int ep, int temp, String ser)
    +addObserverLlista(ObserverLlistas o)
    +llistaDeSeriesComencades()
    +llistaDeSeriesAcabades()
    +llistaDeSeriesNoComencades()
    }
}

package "model"{
    class Cataleg{
    -series: ArrayList<Series>
    +addSerie(String id, String title, String descripcio)
    +addTemp(String idSerie, String numTemporada, String numEpisodis)
    +addEp(String title, String duration, String idioma, String description,
     String data, String idSerie, String numTemporada)
    +visualitzarEpisodi(Usuari us, int ep, int temp, String ser)
    +subscriureEpisodi(Usuari us, int ep, int temp, String ser)
    +valorarEpisodi(Usuari us, int puntuacio, String data, int ep, int temp, String ser)
    +getCataleg()
    +getLlistatSeriesComencades(Usuari us)
    +getLlistatSeriesAcabades(Usuari us)
    +getLlistatSeriesNoComencades(Usuari us)
    }

    class Episodi{
    -title: String
    -duration: String
    -idioma: String
    -description: String
    -data: String
    -vist: SubscriureEpisodi
    -valoracions: Valoracio
    +subscriureUsuari(Usuari us)
    +valorarEpisodi(Usuari us, int puntuacio, String data)
    +visualitzarEpisodi(Usuari us)
    +estaVisualitzat (Usuari us)
    }

    class LlistatUsuaris{
    -llistat_usuaris: ArrayList<Usuari>
    -usuariActual: Usuari
    +registreUsuari(int id, String nom_real, int dni, String nacionalitat, String nickname,
     String password, String data_naixement, String adress, boolean vip)
    +logInUsuari(String nickname, String password)
    +existentUser(Usuari nouUser)
    +safePassword(Usuari u)
    +getUsuari(String us)
    }

    class Persona{
    -id: String
    -nom_real: String
    -nacionalitat: String
    }

    class Serie{
    -id: String
    -title: String
    -descripcio: String
    -temporades: ArrayList<Temporada>
    +addTemporada(String numTemporada, String numEpisodis)
    +getTemporada(int i)
    +addEp(String title, String duration, String idioma, String description, String data, String numTemporada)
    +isVisualitzat(Usuari us, int ep, int temp)
    +visualitzarEpisodi(Usuari us, int ep, int temp)
    +serieComencada(Usuari us)
    +serieAcabada(Usuari us)
    +subscriureEpisodi(Usuari us, int ep, int temp)
    +valorarEpisodi(Usuari us, int puntuacio, String data, int ep, int temp)
    +numTemp()
    +toString()
    }

    class STUB{
    -cataleg: Cataleg
    -llistat_usuaris: LlistatUsuaris
    -obsLlistas: ArrayList<ObserverLlistas>
    +registrarUsuari(String id, String nom_real,String dni, String nacionalitat,
    String nickname, String password, String data_naixement, String adress, boolean vip)
    +logInUsuari(String nickname, String password)
    +addSerie(String id, String title, String descripcio)
    +addTemp(String idSerie, String numTemporada, String numEpisodis)
    +addEp(String title, String duration, String idioma, String description,
    String data, String idSerie, String numTemporada)
    +visualitzarEpisodi(int ep, int temp, String ser)
    +visualitzarEpisodi(String us, int ep, int temp, String ser)
    +subscriureEpisodi(int ep, int temp, String ser)
    +subscriureEpisodi(String client, int ep, int temp, String ser)
    +valorarEpisodi(int puntuacio, String data, int ep, int temp, String ser)
    +valorarEpisodi(String us, int puntuacio, String data, int ep, int temp, String ser)
    +getLlistatSeriesComencades()
    +getLlistatSeriesAcabades()
    +getLlistatSeriesNoComencades()
    +registerObserverLlistas(ObserverLlistas o)
    +removeObserverLlistas(ObserverLlistas o)
    +notifyObserversLlistas()
    }

    class SubscriureEpisodi{
    -vist: ArrayList<Usuari>
    +subscriureUsuari(Usuari us)
    +usuariJaSubscrit(Usuari us)
    }

    interface SubjectLlistas{
    +registerObserverLlistas(ObserverLlistas o)
    +removeObserverLlistas(ObserverLlistas o)
    +notifyObserversLlistas();
    }

    class Temporada{
    -numTemporada: String
    -numEpisodis: String
    -episodis: ArrayList<episodis>
    +addEpisodi(String title, String duration, String idioma, String description, String data)
    +visualitzarEpisodi(Usuari us, int ep)
    +isVisualitzat(Usuari us, int ep)
    +estaComencada (Usuari us)
    +estaAcabada (Usuari us)
    +subscriureEpisodi(Usuari us, int ep)
    +valorarEpisodi(Usuari us, int puntuacio, String data, int ep)
    +numEp()
    }

    class Usuari{
    -nickname: String
    -password: String
    -data_naixement: String
    -adress: String
    -dni: String
    -vip: boolean
    +toString()
    +equals(Object obj)
    }

    class UsuariAcces{
    -dades: STUB
    +registreUsuari(String id, String nom_real,String dni, String nacionalitat, String nickname, String password, String data_naixement, String adress, boolean vip)
    +logInUsuari(String nickname, String password)
    }

    class Valoracio{
    -valUsuari: ArrayList<Usuari>
    -valoracions: ArrayList<String>
    +valorarUnEpisodi(Usuari us, int puntuacio,String data)
    +usuariJaValorat(Usuari us)
    }
}

package "resources"{
    interface DAO_STUB{
    +loadSerie(String id, String title, String desc)
    +loadTemporada(String idSerie, String numTemporada, String numEpisodis)
    +loadEpisodi(String title, String duration, String idioma, String description,
    String data, String idSerie, String numTemporada)
    +loadArtista(String id, String nom, String tipus, String idSerie, String nacionalitat)
    +loadProductora(String id, String nom, String idSerie)
    +loadAdmin(String id, String nom, String usuari, String password)
    +loadClient(String id, String nom, String dni, String adreca, String usuari, String password)
    +loadSubscripcio(String id, String client, String serie, String numTemporada, String episodi)
    +loadVisualització(String id, String client, String serie, String numTemporada, String episodi, String data)
    +loadValoracio(String id, String client, String idSerie, String numTemporada, String episodi, String puntuacio, String data)
    }

    class DAO_XML_STUB{
    -dades: STUB
    -serie: String
    -temporada: String
    -admin: String
    -client: String
    -episodi: String
    -valoracio: String
    -productora: String
    -artista: String
    -subscripcio: String
    -visualitzacio: String
    +obtenirDades(String nomFitxer)
    +loadSerie(String id, String title, String desc)
    +loadTemporada(String idSerie, String numTemporada, String numEpisodis)
    +loadEpisodi(String title, String duration, String idioma, String description,
     String data, String idSerie, String numTemporada)
    +loadArtista(String id, String nom, String tipus, String idSerie, String nacionalitat)
    +loadProductora(String id, String nom, String idSerie)
    +loadValoracio(String id, String client, String idSerie, String numTemporada, String episodi,
     String puntuacio, String data)
    +loadAdmin(String id, String nom, String usuari, String password)
    +loadClient(String id, String nom, String dni, String adreca, String usuari, String password)
    +loadSubscripcio(String id, String client, String serie, String numTemporada, String episodi)
    +loadVisualització(String id, String client, String serie, String numTemporada, String episodi, String data)
    }

    class STUBXMLParser{
    -daoXml: DAO_XML_STUB
    +parse(String nomFitxer)
    +obtenirSeries(Document doc)
    +obtenirProductora(Element eSerie, String idSerie)
    +obtenirArtistes(Element eSerie, String idSerie)
    +obtenirTemporades(Element eSerie, String idSerie)
    +obtenirEpisodis(Element eTemporada, String idSerie, String numTemporada)
    +obtenirValoracions(Document doc)
    +obtenirAdministradors(Document doc)
    +obtenirClients(Document doc)
    +obtenirSubcripcions(Document doc)
    +obtenirVisualitzacions(Document doc)
    }
}

package "vista"{
    class EpSelection{
    contr: Controlador
    se: Serie
    temp: int
    ep: int
    +actBVisualitzat()
    -bValorActionPerformed(java.awt.event.ActionEvent evt)
    -bSubsActionPerformed(java.awt.event.ActionEvent evt)
    -bVisualActionPerformed(java.awt.event.ActionEvent evt)
    -bCancelActionPerformed(java.awt.event.ActionEvent evt)
    }

    class MainWindow{
    contr: Controlador
    seCat: Serie
    seWatched: Serie
    seWatchNext: Serie
    seNotStarted: Serie
    tempCat: int
    epCat: int
    tempWatched: int
    epWatched: int
    tempWatchNext: int
    epWatchNext: int
    tempNotStartedYet: int
    epNotStartedYet: int
    -exitActionPerformed(ActionEvent e)
    -searchSerieActionPerformed(ActionEvent e)
    -catListValueChanged(javax.swing.event.ListSelectionEvent evt)
    -watchNListValueChanged(javax.swing.event.ListSelectionEvent evt)
    -watchedListValueChanged(javax.swing.event.ListSelectionEvent evt)
    -notStartedListValueChanged(javax.swing.event.ListSelectionEvent evt)
    -bInitCatActionPerformed(java.awt.event.ActionEvent evt)
    -bInitWatchNActionPerformed(java.awt.event.ActionEvent evt)
    -bInitWatchedActionPerformed(java.awt.event.ActionEvent evt)
    -bInitNStartedActionPerformed(java.awt.event.ActionEvent evt)
    +initCat()
    +actCat()
    +initWatchNext()
    +actWatchNext()
    +initWatched()
    +actWatched()
    +initNotStarted()
    +actNotStarted()
    +updateLlistas()
    }

    interface ObserverLlistas{
    void updateLlistas();
    }

    class SearchFrame{
    -controlador: Controlador
    -jTextField1ActionPerformed(java.awt.event.ActionEvent evt)
    -jButton2ActionPerformed(java.awt.event.ActionEvent evt)
    -private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)
    }

    class STUB3{
    +{static}main(String args[])
    }

    class STUB_LogInSignIn{
    -controlador: Controlador
    -LogInActionPerformed(ActionEvent e)
    -SignInActionPerformed(ActionEvent e)
    -cancel1ActionPerformed(ActionEvent e)
    -jTextField1ActionPerformed(ActionEvent e)
    }

    class ValorateSelection{
    contr: Controlador
    se: Serie
    temp: int
    ep: int
    -bGoodActionPerformed(java.awt.event.ActionEvent evt)
    -bFunnyActionPerformed(java.awt.event.ActionEvent evt)
    -bWowActionPerformed(java.awt.event.ActionEvent evt)
    -bSadActionPerformed(java.awt.event.ActionEvent evt)
    -bMehActionPerformed(java.awt.event.ActionEvent evt)
    -bBadActionPerformed(java.awt.event.ActionEvent evt)
    -bCancelActionPerformed(java.awt.event.ActionEvent evt)
    }

    class VisualSelection{
    contr: Controlador
    se: Serie
    temp: int
    ep: int
    t: Timer
    -sec: int
    -cs: int
    -actions: ActionListener
    +actionPerformed(ActionEvent e)
    +actualitzarLabel()
    -bValorActionPerformed(ActionEvent e)
    -bCancelActionPerformed(ActionEvent e)
    -button1ActionPerformed(ActionEvent e)
    -button2ActionPerformed(ActionEvent e)
    }
}

package "javax.swing"{}
package "java.awt"{}
package "graphicalResources"{}

STUB "1" *--> "1" Cataleg: conté
STUB "1" *--> "1" LlistatUsuaris: conté
STUB "1" *--> "*" ObserverLlistas: conté
STUB ..|> SubjectLlistas: implementa
Cataleg "1" *--> "*" Serie: consta
LlistatUsuaris "1" *--> "*" Usuari: conté
LlistatUsuaris "1" --> "1" Usuari: necessita
Serie "1" *--> "*" Temporada: conté
Temporada "1" *--> "*" Episodi: conté
Controlador "1" --> "1" STUB: controlem
Controlador "1" --> "1" DAO_XML_STUB: necessita
Controlador "1" --> "1" UsuariAcces: necessita
Controlador "1"-->"1" Controlador: instancia
UsuariAcces "1" --> "1" STUB: veu
Persona <|-- Usuari
Episodi "1" --> "1" SubscriureEpisodi: utilitza
Episodi "1" --> "1" Valoracio: utilitza
SubscriureEpisodi "1" --> "*" Usuari: utilitza
Valoracio "1" --> "*" Usuari: utilitza
DAO_XML_STUB ..|> DAO_STUB: implementa
STUBXMLParser "1" --> "1" DAO_XML_STUB: instància
vista "1" --> "1" Controlador: utilitza
vista --> graphicalResources: utilitza
javax.swing <|-- vista
java.awt <|-- vista
STUB3 "1" --> "1" STUB_LogInSignIn: inicia
STUB_LogInSignIn "1" --> "1" MainWindow: continua
MainWindow "1" --> "*" EpSelection: pot instànciar
MainWindow "1" --> "*" SearchFrame: pot instànciar
MainWindow "1" --> "*" ValorateSelection: pot instànciar
MainWindow "1" --> "*" VisualSelection: pot instànciar
@enduml